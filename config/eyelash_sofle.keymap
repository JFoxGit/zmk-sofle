#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1            &kp N2        &kp N3     &kp N4     &kp N5    &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9         &kp N0      &kp GRAVE
&mo 3       &kp Q             &kp W         &kp E      &kp R      &kp T     &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O          &kp P       &kp BACKSPACE
&mo 1       &kp A             &kp S         &kp D      &kp F      &kp G     &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L          &kp SEMI    &kp APOS
&kp LSHFT   &kp Z             &kp X         &kp C      &kp V      &kp B     &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT        &kp FSLH    &kp RIGHT_SHIFT
&kp C_MUTE  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LCTRL  &kp SPACE  &mo 2     &mkp LCLK        &kp ENTER  &kt LANG1  &kp RCTRL  &kp RIGHT_ALT  &kp C_MENU
            >;

            display-name = "LAYER0";
            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        layer_1_Arrow {
            bindings = <
&kp TILDE       &kp F1          &kp F2          &kp F3           &kp F4           &kp F5          &mmv MOVE_UP     &kp F6     &kp F7      &kp F8            &kp F9             &kp F10    &kp NON_US_BACKSLASH
&none           &none           &kp UP_ARROW    &kp CAPSLOCK     &kp PRINTSCREEN  &kp KP_ENTER    &mmv MOVE_DOWN   &none      &none       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS  &kp PLUS
&trans          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp BACKSPACE    &kp DELETE      &mmv MOVE_LEFT   &none      &kp INSERT  &kp HOME          &kp PAGE_UP        &none      &none
&kp LEFT_SHIFT  &none           &none           &none            &none            &none           &mmv MOVE_RIGHT  &none      &none       &kp END           &kp PG_DN          &none      &kp RIGHT_SHIFT
&kp C_MUTE      &trans          &kp LEFT_ALT    &kp LCTRL        &kp SPACE        &none           &mkp LCLK        &kp ENTER  &kp SPACE   &kp RCTRL         &kp RIGHT_ALT      &none
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_2_Func {
            bindings = <
&none   &kp F1      &kp F2   &kp F3       &kp F4  &kp F5     &kp UP_ARROW     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans  &kp F6      &kp F7   &kp F8       &kp F9  &kp F10    &kp DOWN_ARROW   &trans  &trans  &kp F11     &kp F12    &none        &none
&trans  &kp F11     &kp F12  &trans       &trans  &trans     &kp LEFT_ARROW   &trans  &trans  &trans      &trans     &none        &none
&trans  &sys_reset  &trans   &bootloader  &trans  &trans     &kp RIGHT_ARROW  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans  &trans      &trans   &trans       &trans  &trans     &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;
        };

        layer_3_NUM {
            bindings = <
&kp TILDE  &kp N1        &kp N2        &kp N3     &kp N4        &kp N5       &kp UP_ARROW     &kp KP_NUMLOCK  &kp SLASH  &kp ASTERISK  &kp MINUS     &trans   &trans
&trans     &kp N6        &kp N7        &kp N8     &kp N9        &kp N0       &kp DOWN_ARROW   &kp N7          &kp N8     &kp N9        &kp PLUS      &trans   &trans
&trans     &trans        &trans        &kp MINUS  &kp PLUS      &kp EQUAL    &kp LEFT_ARROW   &kp N4          &kp N5     &kp N6        &kp EQUAL     &trans   &trans
&trans     &trans        &trans        &kp SLASH  &kp ASTERISK  &trans       &kp RIGHT_ARROW  &kp N1          &kp N2     &kp N3        &kp KP_ENTER  &trans   &none
&trans     &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LSHFT     &none        &mkp LCLK        &trans          &trans     &kp RCTRL     &kp RALT      &kp DOT
            >;
        };
    };
};
